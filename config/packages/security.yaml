security:
  providers:
    application:
      id: App\Infrastructure\Security\UserProvider\UserProvider
  encoders:
    App\Domain\Model\User\User:
      algorithm: 'argon2i'
  role_hierarchy:
    ROLE_ADMIN: [ROLE_STANDARD_USER]
    ROLE_STANDARD_USER: []

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    login:
      pattern: ^/login
      stateless: true
      anonymous: true
      provider: application
      json_login:
        check_path: /login
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
        require_previous_session: false
        username_path: username
    api:
      pattern: ^
      anonymous: true
      stateless: true
      provider: application
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator
  access_control:
    # Public
    - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }

    # Admin paths
    - { path: ^/user, roles: ROLE_ADMIN }

    # Others
    - { path: ^, roles: IS_AUTHENTICATED_FULLY }

